version: '3'

services:
  web:
    restart: always
    image: python:3.10
    container_name: "web_django"
    command: bash -c "pip install -r ./app/requirements.txt && pip install celery && pip install redis && python ./app/manage.py makemigrations && python ./app/manage.py migrate && python ./app/manage.py initadmin && python ./app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./restaurant_visit_diary:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis_db
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - REDIS_HOST=redis_db
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - django_network

  celery:
    restart: always
    image: python:3.10
    container_name: "celery_django"
    working_dir: /app
    command: bash -c "pip install -r ./requirements.txt && pip install celery && pip install redis && celery -A restaurant_visit_diary worker -l info"
    volumes:
      - ./restaurant_visit_diary:/app
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis_db
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - REDIS_HOST=redis_db
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - django_network

  db:
    restart: always
    image: postgres:16
    container_name: "postgres_django"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${EXTERNAL_DB_PORT}:5432"
    networks:
      - django_network

  redis_db:
    restart: always
    image: "redis:latest"
    container_name: "redis_django"
    ports:
      - "${EXTERNAL_REDIS_PORT}:6379"
    networks:
      - django_network

networks:
  django_network:
    driver: bridge

volumes:
  postgres_data: